{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of over_fit_bertipynb","provenance":[],"collapsed_sections":[],"mount_file_id":"1rgjRKm2DnhXFVwBx-hYwCc-wU-0HxkQ6","authorship_tag":"ABX9TyMFo5KdjjK6dBAdNQB1DHzz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","source":["!pip install -q tf-models-official==2.7.0\n","!pip install -q -U \"tensorflow-text==2.8.*\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Glvoedt0w1gR","executionInfo":{"status":"ok","timestamp":1653406030555,"user_tz":240,"elapsed":129095,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}},"outputId":"8c52932c-333c-40ae-c0de-38cbcb93dcb8"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l\r\u001b[K     |▏                               | 10 kB 29.1 MB/s eta 0:00:01\r\u001b[K     |▍                               | 20 kB 21.3 MB/s eta 0:00:01\r\u001b[K     |▌                               | 30 kB 10.8 MB/s eta 0:00:01\r\u001b[K     |▊                               | 40 kB 8.8 MB/s eta 0:00:01\r\u001b[K     |█                               | 51 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█                               | 61 kB 5.5 MB/s eta 0:00:01\r\u001b[K     |█▎                              | 71 kB 5.5 MB/s eta 0:00:01\r\u001b[K     |█▍                              | 81 kB 5.6 MB/s eta 0:00:01\r\u001b[K     |█▋                              | 92 kB 6.2 MB/s eta 0:00:01\r\u001b[K     |█▉                              | 102 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██                              | 112 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██▏                             | 122 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██▍                             | 133 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██▌                             | 143 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██▊                             | 153 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██▉                             | 163 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███                             | 174 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███▎                            | 184 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███▍                            | 194 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███▋                            | 204 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███▉                            | 215 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████                            | 225 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████▏                           | 235 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████▎                           | 245 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████▌                           | 256 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████▊                           | 266 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████▉                           | 276 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████                           | 286 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████▎                          | 296 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████▍                          | 307 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████▋                          | 317 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████▊                          | 327 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████                          | 337 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████▏                         | 348 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████▎                         | 358 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████▌                         | 368 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████▊                         | 378 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████▉                         | 389 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████                         | 399 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████▏                        | 409 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████▍                        | 419 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 430 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████▊                        | 440 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████                        | 450 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████                        | 460 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████▎                       | 471 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████▌                       | 481 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████▋                       | 491 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████▉                       | 501 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████                       | 512 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████▏                      | 522 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████▍                      | 532 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████▌                      | 542 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████▊                      | 552 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████                      | 563 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████                      | 573 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████▎                     | 583 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████▌                     | 593 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████▋                     | 604 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████▉                     | 614 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████                     | 624 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████▏                    | 634 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 645 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████▌                    | 655 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████▊                    | 665 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████                    | 675 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████                    | 686 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████▎                   | 696 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████▍                   | 706 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████▋                   | 716 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████▉                   | 727 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 737 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████▏                  | 747 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████▍                  | 757 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████▌                  | 768 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████▊                  | 778 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████▉                  | 788 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 798 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████▎                 | 808 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████▍                 | 819 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████▋                 | 829 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████▊                 | 839 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 849 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 860 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████▎                | 870 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████▌                | 880 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████▊                | 890 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████▉                | 901 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████                | 911 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████▏               | 921 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████▍               | 931 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████▋               | 942 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████▊               | 952 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████               | 962 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████▏              | 972 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████▎              | 983 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████▌              | 993 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████▋              | 1.0 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████▉              | 1.0 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████              | 1.0 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 1.0 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████▍             | 1.0 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████▋             | 1.1 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████▊             | 1.1 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 1.1 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 1.1 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████▎            | 1.1 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 1.1 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████▋            | 1.1 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████▉            | 1.1 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 1.1 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████▏           | 1.1 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████▍           | 1.2 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████▌           | 1.2 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████▊           | 1.2 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████           | 1.2 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████           | 1.2 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▎          | 1.2 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 1.2 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▋          | 1.2 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▉          | 1.2 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████          | 1.2 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▏         | 1.3 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▍         | 1.3 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▌         | 1.3 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▊         | 1.3 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▉         | 1.3 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 1.3 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▎        | 1.3 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▍        | 1.3 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▋        | 1.3 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▉        | 1.4 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 1.4 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▏       | 1.4 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▎       | 1.4 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▌       | 1.4 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▊       | 1.4 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▉       | 1.4 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 1.4 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▎      | 1.4 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 1.4 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▋      | 1.5 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▊      | 1.5 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 1.5 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▏     | 1.5 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▎     | 1.5 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▌     | 1.5 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▊     | 1.5 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▉     | 1.5 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████     | 1.5 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▏    | 1.5 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▍    | 1.6 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▋    | 1.6 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▊    | 1.6 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 1.6 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 1.6 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▎   | 1.6 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▌   | 1.6 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▋   | 1.6 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▉   | 1.6 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 1.6 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▏  | 1.7 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▍  | 1.7 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 1.7 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▊  | 1.7 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 1.7 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 1.7 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▎ | 1.7 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▌ | 1.7 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▋ | 1.7 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▉ | 1.8 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████ | 1.8 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▏| 1.8 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▍| 1.8 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▌| 1.8 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▊| 1.8 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 1.8 MB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 1.8 MB 5.2 MB/s \n","\u001b[K     |████████████████████████████████| 43 kB 2.4 MB/s \n","\u001b[K     |████████████████████████████████| 47.8 MB 60 kB/s \n","\u001b[K     |████████████████████████████████| 352 kB 52.6 MB/s \n","\u001b[K     |████████████████████████████████| 596 kB 58.6 MB/s \n","\u001b[K     |████████████████████████████████| 92 kB 7.5 MB/s \n","\u001b[K     |████████████████████████████████| 1.1 MB 19.4 MB/s \n","\u001b[K     |████████████████████████████████| 4.6 MB 39.6 MB/s \n","\u001b[K     |████████████████████████████████| 1.2 MB 43.4 MB/s \n","\u001b[K     |████████████████████████████████| 237 kB 57.2 MB/s \n","\u001b[K     |████████████████████████████████| 99 kB 5.3 MB/s \n","\u001b[K     |████████████████████████████████| 462 kB 49.7 MB/s \n","\u001b[K     - 677.8 MB 216 kB/s\n","\u001b[K     |████████████████████████████████| 511.7 MB 6.4 kB/s \n","\u001b[K     \\ 677.9 MB 433 kB/s\n","\u001b[K     |████████████████████████████████| 511.7 MB 4.4 kB/s \n","\u001b[K     |████████████████████████████████| 4.9 MB 41.3 MB/s \n","\u001b[?25h  Building wheel for py-cpuinfo (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for seqeval (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}]},{"cell_type":"code","execution_count":2,"metadata":{"id":"Zw7W3XSgwVd_","executionInfo":{"status":"ok","timestamp":1653406080200,"user_tz":240,"elapsed":2788,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}}},"outputs":[],"source":["import os\n","import shutil\n","\n","import tensorflow as tf\n","import tensorflow_hub as hub\n","import tensorflow_text as text\n","from official.nlp import optimization  # to create AdamW optimizer\n","\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["#@title Choose a BERT model to fine-tune\n","\n","bert_model_name = 'small_bert/bert_en_uncased_L-4_H-512_A-8'  #@param [\"bert_en_uncased_L-12_H-768_A-12\", \"bert_en_cased_L-12_H-768_A-12\", \"bert_multi_cased_L-12_H-768_A-12\", \"small_bert/bert_en_uncased_L-2_H-128_A-2\", \"small_bert/bert_en_uncased_L-2_H-256_A-4\", \"small_bert/bert_en_uncased_L-2_H-512_A-8\", \"small_bert/bert_en_uncased_L-2_H-768_A-12\", \"small_bert/bert_en_uncased_L-4_H-128_A-2\", \"small_bert/bert_en_uncased_L-4_H-256_A-4\", \"small_bert/bert_en_uncased_L-4_H-512_A-8\", \"small_bert/bert_en_uncased_L-4_H-768_A-12\", \"small_bert/bert_en_uncased_L-6_H-128_A-2\", \"small_bert/bert_en_uncased_L-6_H-256_A-4\", \"small_bert/bert_en_uncased_L-6_H-512_A-8\", \"small_bert/bert_en_uncased_L-6_H-768_A-12\", \"small_bert/bert_en_uncased_L-8_H-128_A-2\", \"small_bert/bert_en_uncased_L-8_H-256_A-4\", \"small_bert/bert_en_uncased_L-8_H-512_A-8\", \"small_bert/bert_en_uncased_L-8_H-768_A-12\", \"small_bert/bert_en_uncased_L-10_H-128_A-2\", \"small_bert/bert_en_uncased_L-10_H-256_A-4\", \"small_bert/bert_en_uncased_L-10_H-512_A-8\", \"small_bert/bert_en_uncased_L-10_H-768_A-12\", \"small_bert/bert_en_uncased_L-12_H-128_A-2\", \"small_bert/bert_en_uncased_L-12_H-256_A-4\", \"small_bert/bert_en_uncased_L-12_H-512_A-8\", \"small_bert/bert_en_uncased_L-12_H-768_A-12\", \"albert_en_base\", \"electra_small\", \"electra_base\", \"experts_pubmed\", \"experts_wiki_books\", \"talking-heads_base\"]\n","\n","map_name_to_handle = {\n","    'bert_en_uncased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_L-12_H-768_A-12/3',\n","    'bert_en_cased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_cased_L-12_H-768_A-12/3',\n","    'bert_multi_cased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_multi_cased_L-12_H-768_A-12/3',\n","    'small_bert/bert_en_uncased_L-2_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-2_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-2_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-2_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-2_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-2_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-2_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-2_H-768_A-12/1',\n","    'small_bert/bert_en_uncased_L-4_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-4_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-4_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-4_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-4_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-4_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-4_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-4_H-768_A-12/1',\n","    'small_bert/bert_en_uncased_L-6_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-6_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-6_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-6_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-6_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-6_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-6_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-6_H-768_A-12/1',\n","    'small_bert/bert_en_uncased_L-8_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-8_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-8_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-8_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-8_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-8_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-8_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-8_H-768_A-12/1',\n","    'small_bert/bert_en_uncased_L-10_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-10_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-10_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-10_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-10_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-10_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-10_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-10_H-768_A-12/1',\n","    'small_bert/bert_en_uncased_L-12_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-12_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-12_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-12_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-12_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-12_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-12_H-768_A-12/1',\n","    'albert_en_base':\n","        'https://tfhub.dev/tensorflow/albert_en_base/2',\n","    'electra_small':\n","        'https://tfhub.dev/google/electra_small/2',\n","    'electra_base':\n","        'https://tfhub.dev/google/electra_base/2',\n","    'experts_pubmed':\n","        'https://tfhub.dev/google/experts/bert/pubmed/2',\n","    'experts_wiki_books':\n","        'https://tfhub.dev/google/experts/bert/wiki_books/2',\n","    'talking-heads_base':\n","        'https://tfhub.dev/tensorflow/talkheads_ggelu_bert_en_base/1',\n","}\n","\n","map_model_to_preprocess = {\n","    'bert_en_uncased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'bert_en_cased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_cased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-2_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-2_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-2_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-2_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-4_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-4_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-4_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-4_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-6_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-6_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-6_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-6_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-8_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-8_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-8_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-8_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-10_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-10_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-10_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-10_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-12_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-12_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-12_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'bert_multi_cased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_multi_cased_preprocess/3',\n","    'albert_en_base':\n","        'https://tfhub.dev/tensorflow/albert_en_preprocess/3',\n","    'electra_small':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'electra_base':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'experts_pubmed':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'experts_wiki_books':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'talking-heads_base':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","}\n","\n","tfhub_handle_encoder = map_name_to_handle[bert_model_name]\n","tfhub_handle_preprocess = map_model_to_preprocess[bert_model_name]\n","\n","print(f'BERT model selected           : {tfhub_handle_encoder}')\n","print(f'Preprocess model auto-selected: {tfhub_handle_preprocess}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ye6SuLK-xJfq","executionInfo":{"status":"ok","timestamp":1653406080201,"user_tz":240,"elapsed":11,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}},"outputId":"e50e99d4-da93-4ab4-d6f1-6214917903fa","cellView":"form"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["BERT model selected           : https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-4_H-512_A-8/1\n","Preprocess model auto-selected: https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3\n"]}]},{"cell_type":"markdown","source":["# Load Data"],"metadata":{"id":"gDdpO3fWx20N"}},{"cell_type":"code","source":["import pickle\n","import pandas as pd \n","\n","text = pd.read_pickle('/content/drive/MyDrive/ai4good/binary_class_data/X_train.pkl')\n","labels = pd.read_pickle('/content/drive/MyDrive/ai4good/binary_class_data/y_train.pkl')\n","\n","text_test = pd.read_pickle('/content/drive/MyDrive/ai4good/binary_class_data/X_test.pkl')\n","labels_test = pd.read_pickle('/content/drive/MyDrive/ai4good/binary_class_data/y_test.pkl')\n","# print(text)\n","# print(labels)"],"metadata":{"id":"LFr0-ahRx6Gt","executionInfo":{"status":"ok","timestamp":1653406353965,"user_tz":240,"elapsed":495,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","a = np.array(labels)\n","labels_onehot = np.zeros((a.size, a.max()+1))\n","labels_onehot[np.arange(a.size),a-1] = 1\n","print(labels_onehot.shape)\n","\n","\n","\n","a = np.array(labels_test)\n","labels_onehot_test = np.zeros((a.size, a.max()+1))\n","labels_onehot_test[np.arange(a.size),a-1] = 1\n","print(labels_onehot_test.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P5aBVm_DyvCX","executionInfo":{"status":"ok","timestamp":1653406356390,"user_tz":240,"elapsed":101,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}},"outputId":"9173da66-b8f9-491e-bdac-d4321ecbbee7"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["(205, 2)\n","(101, 2)\n"]}]},{"cell_type":"markdown","source":["# Define the Model"],"metadata":{"id":"2fqgN1F5x6oF"}},{"cell_type":"code","source":["bert_preprocess_model = hub.KerasLayer(tfhub_handle_preprocess)"],"metadata":{"id":"INMua7dWxO0q","executionInfo":{"status":"ok","timestamp":1653406238766,"user_tz":240,"elapsed":2505,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["def build_classifier_model():\n","  text_input = tf.keras.layers.Input(shape=(), dtype=tf.string, name='text')\n","  preprocessing_layer = hub.KerasLayer(tfhub_handle_preprocess, name='preprocessing')\n","  encoder_inputs = preprocessing_layer(text_input)\n","  encoder = hub.KerasLayer(tfhub_handle_encoder, trainable=True, name='BERT_encoder')\n","  outputs = encoder(encoder_inputs)\n","  net = outputs['pooled_output']\n","  net = tf.keras.layers.Dropout(0.5)(net)\n","  # net = tf.keras.layers.Dense(128, activation='relu', name='Dense')(net)\n","  net = tf.keras.layers.Dense(2, activation='softmax', name='classifier')(net)\n","  return tf.keras.Model(text_input, net)"],"metadata":{"id":"uIGWBeqSxXYn","executionInfo":{"status":"ok","timestamp":1653406594734,"user_tz":240,"elapsed":109,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["classifier_model = build_classifier_model()\n","bert_raw_result = classifier_model(tf.constant(text))\n","classifier_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xyhxAdLyxmGz","executionInfo":{"status":"ok","timestamp":1653406607718,"user_tz":240,"elapsed":11337,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}},"outputId":"01235882-fee7-46bf-be2e-da93fc061469"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_5\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," text (InputLayer)              [(None,)]            0           []                               \n","                                                                                                  \n"," preprocessing (KerasLayer)     {'input_mask': (Non  0           ['text[0][0]']                   \n","                                e, 128),                                                          \n","                                 'input_word_ids':                                                \n","                                (None, 128),                                                      \n","                                 'input_type_ids':                                                \n","                                (None, 128)}                                                      \n","                                                                                                  \n"," BERT_encoder (KerasLayer)      {'default': (None,   28763649    ['preprocessing[0][0]',          \n","                                512),                             'preprocessing[0][1]',          \n","                                 'encoder_outputs':               'preprocessing[0][2]']          \n","                                 [(None, 128, 512),                                               \n","                                 (None, 128, 512),                                                \n","                                 (None, 128, 512),                                                \n","                                 (None, 128, 512)],                                               \n","                                 'pooled_output': (                                               \n","                                None, 512),                                                       \n","                                 'sequence_output':                                               \n","                                 (None, 128, 512)}                                                \n","                                                                                                  \n"," dropout_5 (Dropout)            (None, 512)          0           ['BERT_encoder[0][5]']           \n","                                                                                                  \n"," classifier (Dense)             (None, 2)            1026        ['dropout_5[0][0]']              \n","                                                                                                  \n","==================================================================================================\n","Total params: 28,764,675\n","Trainable params: 28,764,674\n","Non-trainable params: 1\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","source":["tf.keras.utils.plot_model(classifier_model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"joh78ssCzkfH","executionInfo":{"status":"ok","timestamp":1653406607940,"user_tz":240,"elapsed":229,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}},"outputId":"4f27264c-be9e-461d-a45b-524012f3ba71"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<IPython.core.display.Image object>"],"image/png":"\n"},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["loss = tf.keras.losses.CategoricalCrossentropy(from_logits=True)\n","metrics = tf.metrics.Accuracy()"],"metadata":{"id":"m8Jx4Nwszngd","executionInfo":{"status":"ok","timestamp":1653406607941,"user_tz":240,"elapsed":6,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["epochs = 100\n","steps_per_epoch = 100\n","num_train_steps = steps_per_epoch * epochs\n","num_warmup_steps = int(0.1*num_train_steps)\n","\n","init_lr = 3e-4\n","optimizer = optimization.create_optimizer(init_lr=init_lr,\n","                                          num_train_steps=num_train_steps,\n","                                          num_warmup_steps=num_warmup_steps,\n","                                          optimizer_type='adamw')"],"metadata":{"id":"eoQ7hkc-zkkh","executionInfo":{"status":"ok","timestamp":1653406720479,"user_tz":240,"elapsed":125,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["classifier_model.compile(optimizer=optimizer,\n","                         loss=loss,\n","                         metrics=metrics)"],"metadata":{"id":"kDq_-Jaoz0Ov","executionInfo":{"status":"ok","timestamp":1653406608081,"user_tz":240,"elapsed":145,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["print(f'Training model with {tfhub_handle_encoder}')\n","history = classifier_model.fit(x=tf.constant(text),\n","                               y = labels_onehot,\n","                               validation_data=(text_test,labels_onehot_test ),\n","                               epochs=epochs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"CxZtgg-hz9O6","executionInfo":{"status":"error","timestamp":1653406672934,"user_tz":240,"elapsed":62031,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}},"outputId":"1b8c7c95-13a8-4136-ed7b-a71bd8de36c4"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["Training model with https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-4_H-512_A-8/1\n","Epoch 1/100\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/dispatch.py:1082: UserWarning: \"`categorical_crossentropy` received `from_logits=True`, but the `output` argument was produced by a sigmoid or softmax activation and thus does not represent logits. Was this intended?\"\n","  return dispatch_target(*args, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["7/7 [==============================] - 8s 333ms/step - loss: 1.0612 - accuracy: 0.0000e+00 - val_loss: 0.7492 - val_accuracy: 0.0000e+00\n","Epoch 2/100\n","7/7 [==============================] - 2s 262ms/step - loss: 0.9062 - accuracy: 0.0000e+00 - val_loss: 0.7086 - val_accuracy: 0.0000e+00\n","Epoch 3/100\n","7/7 [==============================] - 2s 255ms/step - loss: 0.8468 - accuracy: 0.0000e+00 - val_loss: 0.7067 - val_accuracy: 0.0000e+00\n","Epoch 4/100\n","7/7 [==============================] - 2s 262ms/step - loss: 0.8291 - accuracy: 0.0000e+00 - val_loss: 0.6838 - val_accuracy: 0.0000e+00\n","Epoch 5/100\n","7/7 [==============================] - 2s 259ms/step - loss: 0.8411 - accuracy: 0.0000e+00 - val_loss: 0.6079 - val_accuracy: 0.0000e+00\n","Epoch 6/100\n","7/7 [==============================] - 2s 259ms/step - loss: 0.7247 - accuracy: 0.0000e+00 - val_loss: 0.5812 - val_accuracy: 0.0000e+00\n","Epoch 7/100\n","7/7 [==============================] - 2s 257ms/step - loss: 0.6257 - accuracy: 0.0000e+00 - val_loss: 0.5676 - val_accuracy: 0.0000e+00\n","Epoch 8/100\n","7/7 [==============================] - 2s 257ms/step - loss: 0.6847 - accuracy: 0.0000e+00 - val_loss: 0.5419 - val_accuracy: 0.0000e+00\n","Epoch 9/100\n","7/7 [==============================] - 2s 259ms/step - loss: 0.6150 - accuracy: 0.0000e+00 - val_loss: 0.5198 - val_accuracy: 0.0000e+00\n","Epoch 10/100\n","7/7 [==============================] - 2s 256ms/step - loss: 0.5158 - accuracy: 0.0000e+00 - val_loss: 0.4953 - val_accuracy: 0.0000e+00\n","Epoch 11/100\n","7/7 [==============================] - 2s 258ms/step - loss: 0.4846 - accuracy: 0.0000e+00 - val_loss: 0.4605 - val_accuracy: 0.0000e+00\n","Epoch 12/100\n","7/7 [==============================] - 2s 258ms/step - loss: 0.4180 - accuracy: 0.0000e+00 - val_loss: 0.4531 - val_accuracy: 0.0000e+00\n","Epoch 13/100\n","7/7 [==============================] - 2s 260ms/step - loss: 0.3520 - accuracy: 0.0000e+00 - val_loss: 0.4661 - val_accuracy: 0.0000e+00\n","Epoch 14/100\n","7/7 [==============================] - 2s 259ms/step - loss: 0.3508 - accuracy: 0.0000e+00 - val_loss: 0.4910 - val_accuracy: 0.0000e+00\n","Epoch 15/100\n","7/7 [==============================] - 2s 260ms/step - loss: 0.2444 - accuracy: 0.0000e+00 - val_loss: 0.4186 - val_accuracy: 0.0000e+00\n","Epoch 16/100\n","7/7 [==============================] - 2s 263ms/step - loss: 0.1809 - accuracy: 0.0000e+00 - val_loss: 0.4583 - val_accuracy: 0.0000e+00\n","Epoch 17/100\n","7/7 [==============================] - 2s 259ms/step - loss: 0.1400 - accuracy: 0.0000e+00 - val_loss: 0.5321 - val_accuracy: 0.0000e+00\n","Epoch 18/100\n","7/7 [==============================] - 2s 257ms/step - loss: 0.0545 - accuracy: 0.0000e+00 - val_loss: 0.6296 - val_accuracy: 0.0000e+00\n","Epoch 19/100\n","7/7 [==============================] - 2s 260ms/step - loss: 0.0547 - accuracy: 0.0000e+00 - val_loss: 0.6608 - val_accuracy: 0.0000e+00\n","Epoch 20/100\n","7/7 [==============================] - 2s 259ms/step - loss: 0.0148 - accuracy: 0.0000e+00 - val_loss: 0.7100 - val_accuracy: 0.0000e+00\n","Epoch 21/100\n","7/7 [==============================] - 2s 263ms/step - loss: 0.0059 - accuracy: 0.0000e+00 - val_loss: 0.9057 - val_accuracy: 0.0000e+00\n","Epoch 22/100\n","7/7 [==============================] - 2s 260ms/step - loss: 0.0162 - accuracy: 0.0000e+00 - val_loss: 0.9214 - val_accuracy: 0.0000e+00\n","Epoch 23/100\n","7/7 [==============================] - 2s 258ms/step - loss: 0.0033 - accuracy: 0.0000e+00 - val_loss: 1.0159 - val_accuracy: 0.0000e+00\n","Epoch 24/100\n","7/7 [==============================] - 2s 260ms/step - loss: 7.4613e-04 - accuracy: 0.0000e+00 - val_loss: 1.1364 - val_accuracy: 0.0000e+00\n","Epoch 25/100\n","7/7 [==============================] - 2s 264ms/step - loss: 0.0077 - accuracy: 0.0000e+00 - val_loss: 1.2489 - val_accuracy: 0.0000e+00\n","Epoch 26/100\n","7/7 [==============================] - 2s 266ms/step - loss: 0.0036 - accuracy: 0.0000e+00 - val_loss: 1.2330 - val_accuracy: 0.0000e+00\n","Epoch 27/100\n","7/7 [==============================] - 2s 261ms/step - loss: 1.5277e-04 - accuracy: 0.0000e+00 - val_loss: 1.3193 - val_accuracy: 0.0000e+00\n","Epoch 28/100\n","7/7 [==============================] - 2s 332ms/step - loss: 0.0020 - accuracy: 0.0000e+00 - val_loss: 1.2813 - val_accuracy: 0.0000e+00\n","Epoch 29/100\n","7/7 [==============================] - 2s 258ms/step - loss: 1.2784e-04 - accuracy: 0.0000e+00 - val_loss: 1.2899 - val_accuracy: 0.0000e+00\n","Epoch 30/100\n","7/7 [==============================] - 2s 265ms/step - loss: 2.3836e-04 - accuracy: 0.0000e+00 - val_loss: 1.2913 - val_accuracy: 0.0000e+00\n","Epoch 31/100\n","7/7 [==============================] - 2s 263ms/step - loss: 1.1385e-04 - accuracy: 0.0000e+00 - val_loss: 1.3238 - val_accuracy: 0.0000e+00\n","Epoch 32/100\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-59-48fbf8521227>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m                                \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlabels_onehot\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m                                \u001b[0mvalidation_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext_test\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlabels_onehot_test\u001b[0m \u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m                                epochs=epochs)\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 64\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1382\u001b[0m                 _r=1):\n\u001b[1;32m   1383\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1384\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1385\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1386\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    913\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    914\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 915\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    916\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    917\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    945\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    946\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 947\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateless_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    948\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    949\u001b[0m       \u001b[0;31m# Release the lock early so that multiple threads can perform the call\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2955\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[1;32m   2956\u001b[0m     return graph_function._call_flat(\n\u001b[0;32m-> 2957\u001b[0;31m         filtered_flat_args, captured_inputs=graph_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[0m\u001b[1;32m   2958\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2959\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1852\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1853\u001b[0m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0;32m-> 1854\u001b[0;31m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[0m\u001b[1;32m   1855\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1856\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    502\u001b[0m               \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    503\u001b[0m               \u001b[0mattrs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mattrs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 504\u001b[0;31m               ctx=ctx)\n\u001b[0m\u001b[1;32m    505\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    506\u001b[0m           outputs = execute.execute_with_cancellation(\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     53\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     54\u001b[0m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0;32m---> 55\u001b[0;31m                                         inputs, attrs, num_outputs)\n\u001b[0m\u001b[1;32m     56\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["history_dict = history.history\n","print(history_dict.keys())\n","\n","acc = history_dict['accuracy']\n","# val_acc = history_dict['val_accuracy']\n","loss = history_dict['loss']\n","# val_loss = history_dict['val_loss']\n","\n","epochs = range(1, len(acc) + 1)\n","fig = plt.figure(figsize=(10, 6))\n","fig.tight_layout()\n","\n","plt.subplot(2, 1, 1)\n","# r is for \"solid red line\"\n","plt.plot(epochs, loss, 'r', label='Training loss')\n","# b is for \"solid blue line\"\n","# plt.plot(epochs, val_loss, 'b', label='Validation loss')\n","plt.title('Training and validation loss')\n","# plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend()\n","\n","plt.subplot(2, 1, 2)\n","plt.plot(epochs, acc, 'r', label='Training acc')\n","# plt.plot(epochs, val_acc, 'b', label='Validation acc')\n","plt.title('Training and validation accuracy')\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend(loc='lower right')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":439},"id":"T-5ehAeB3OFE","executionInfo":{"status":"ok","timestamp":1652117478082,"user_tz":240,"elapsed":929,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}},"outputId":"931917f9-584f-41fb-f8e2-6cc2a43791a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["dict_keys(['loss', 'accuracy'])\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7ff116ed21d0>"]},"metadata":{},"execution_count":63},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Horray We've Overfit the Model."],"metadata":{"id":"O7lKPYxA4jhA"}},{"cell_type":"code","source":["classifier_model.predict(tf.constant(text)).argmax(axis=-1) - (np.array(labels)-1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d_muX96Z4IZU","executionInfo":{"status":"ok","timestamp":1652117603984,"user_tz":240,"elapsed":2742,"user":{"displayName":"Peter Ma","userId":"07990741037365811516"}},"outputId":"289e6cae-138e-4114-edae-1272f5c7fff7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0])"]},"metadata":{},"execution_count":69}]}]}